{
  "nodes": [
    {
      "id": 1,
      "label": "这是关于**非线性方程数值解法**的知识框架，涵盖以下内容：   - **方法分类**：二分法（含二分算法 ）、迭代法（含一般迭代法、迭代算法理论 ）、牛顿法、弦截法。   - **重点考察方向**：算法实现思想、适用条件（如实复根、可导等）、求解步数计算、收敛条件与判断、迭代格式收敛发散判断、收敛速度与收敛阶 。 写一个学习文档，从小学生到大学生由浅入深地解释清楚以上内容",
      "title": "这是关于**非线性方程数值解法**的知识框架，涵盖以下内容：   - **方法分类**：二分法（含二分算法 ）、迭代法（含一般迭代法、迭代算法理论 ）、牛顿法、弦截法。   - **重点考察方向**：算法实现思想、适用条件（如实复根、可导等）、求解步数计算、收敛条件与判断、迭代格式收敛发散判断、收敛速度与收敛阶 。 写一个学习文档，从小学生到大学生由浅入深地解释清楚以上内容",
      "level": 0,
      "document": "以下是一个从零基础到专业水平的非线性方程数值解法学习文档，采用渐进式教学框架：\n\n---\n### **非线性方程数值解法学习手册**\n#### （从小学到大学渐进式讲解）\n\n---\n\n## **一、小学生篇：用「猜数字游戏」理解核心思想**\n\n### **1.1 什么是方程？**\n> 例子：解谜题  \n> “魔法箱放进去3，吐出来8；放进去5，吐出来0。猜猜放多少会吐出来4？”  \n> ➔ 这就是在解方程 `f(x) = 4`\n\n### **1.2 二分法：对半砍的猜价格游戏**\n```mermaid\ngraph LR\nA[猜100元? 高了] --> B[猜0-100中间值50元]\nB --> C{50元还是高?}\nC -->|是| D[猜0-50中间值25元]\nC -->|否| E[猜50-100中间值75元]\n```\n\n**核心思想**：  \n- 不断缩小范围（如价格区间）  \n- 每次砍掉一半错误答案  \n- **适用条件**：函数在区间内必须穿过x轴（像连续的山路）\n\n---\n\n## **二、初中生篇：理解算法与实现**\n\n### **2.1 二分法数学描述**\n```python\ndef 二分法(f, a, b, 精度):\n    while (b-a) > 精度:\n        c = (a+b)/2\n        if f(c)*f(a) < 0: \n            b = c   # 根在左半段\n        else: \n            a = c   # 根在右半段\n    return (a+b)/2\n```\n\n**关键点**：  \n- 必须满足 `f(a)·f(b) < 0`（两端点函数值异号）  \n- **步数计算**：若初始区间长度L，要求精度ε，则迭代次数 ≥ log₂(L/ε)\n\n### **2.2 迭代法：用计算器重复计算**\n> 解方程 x = cos(x) 的步骤：  \n> 1. 输入初始值（如0.5）  \n> 2. 按[cos]键 → 显示0.8776  \n> 3. 再按[cos] → 0.6390  \n> 4. 重复直到数字不变 → 得到解约0.739\n\n**核心公式**：  \n$$x_{n+1} = g(x_n)$$  \n（其中 g(x) = cos(x)）\n\n---\n\n## **高中生篇：深入收敛性与方法对比**\n\n### **3.1 迭代法的收敛条件**\n```mermaid\ngraph TD\nA[迭代格式 x=g(x)] --> B{满足以下任一条件}\nB --> C[|g'(x)| < 1 在根附近]\nB --> D[g(x)在区间上压缩]\n```\n\n**收敛判断实验**：  \n| 迭代格式      | 是否收敛 | 原因            |\n|---------------|----------|-----------------|\n| x = 0.5*sin(x)| 是       | |斜率| < 1      |\n| x = 2*cos(x)  | 否       | |斜率| > 1      |\n\n### **3.2 牛顿法：用切线快速逼近**\n**几何演示**：  \n1. 在初始点x₀画切线  \n2. 切线交x轴于x₁  \n3. 重复过程逼近真实根\n\n**公式**：  \n$$x_{n+1} = x_n - \\frac{f(x_n)}{f'(x_n)}$$\n\n> 例：求√2（解 x²-2=0）  \n> 设x₀=1  \n> x₁ = 1 - (1²-2)/(2×1) = 1.5  \n> x₂ = 1.5 - (1.5²-2)/(3) ≈ 1.4167  \n> （2步即达0.1%精度）\n\n---\n\n## **大学生篇：严格理论与扩展方法**\n\n### **4.1 收敛性严格定义**\n**全局收敛**：  \n∀x₀∈[a,b]，迭代均收敛  \n**局部收敛**：  \n∃x₀的邻域使迭代收敛\n\n**收敛阶判定**：  \n$$\\lim_{n\\to\\infty} \\frac{|e_{n+1}|}{|e_n|^p} = C$$  \n- p=1：线性收敛（如二分法）  \n- p>1：超线性收敛（牛顿法p=2）\n\n### **4.2 牛顿法收敛定理**\n若满足：  \n1. f∈C²[a,b]  \n2. f'(x)≠0 在[a,b]  \n3. 初始点x₀足够接近根x*  \n则牛顿法至少二阶收敛\n\n### **4.3 弦截法：牛顿法的改进**\n**原理**：用差商代替导数  \n$$x_{n+1} = x_n - f(x_n)\\frac{x_n - x_{n-1}}{f(x_n)-f(x_{n-1})}$$  \n优点：无需计算导数  \n缺点：收敛阶(1.618)低于牛顿法\n\n### **4.4 方法对比表**\n| 方法   | 需导数 | 收敛阶 | 适用场景               | 初始要求         |\n|--------|--------|--------|------------------------|------------------|\n| 二分法 | 否     | 1      | 有根区间已知           | f(a)f(b)<0      |\n| 迭代法 | 否     | 1或更高| 可构造收敛迭代格式     | |g'(x)|<1    |\n| 牛顿法 | 是     | 2      | 导数易计算且非零       | 靠近单根         |\n| 弦截法 | 否     | 1.618  | 函数光滑但导数复杂     | 需两个初始点     |\n\n---\n\n## **重点题型训练**\n1. **收敛阶计算**  \n  已知迭代格式 $$x_{n+1} = x_n + \\frac{\\sin x_n}{2}$$，求其在x=0处的收敛阶  \n  **解**：计算g'(0)=1 → 线性收敛\n\n2. **迭代格式改造**  \n  使方程x³-2x-5=0的迭代 $$x=\\sqrt[3]{2x+5}$$ 收敛  \n  **解**：验证|g'(x)|在根附近>1 → 需改造为 $$x = \\frac{1}{2}(x + \\sqrt[3]{2x+5})$$\n\n3. **牛顿法实现**  \n  编程求f(x)=eˣ + x² - 4的根（Python实现见附录）\n\n---\n\n**附录：Python代码示例**\n```python\n# 牛顿法求根\ndef newton(f, df, x0, tol=1e-6):\n    for _ in range(100):   # 最大迭代100次\n        x1 = x0 - f(x0)/df(x0)\n        if abs(x1 - x0) < tol:\n            return x1\n        x0 = x1\n    return x0\n\n# 求解 e^x + x^2 - 4 = 0\nf = lambda x: math.exp(x) + x**2 - 4\ndf = lambda x: math.exp(x) + 2*x\nroot = newton(f, df, 1.0)  # 输出约1.058\n```\n\n> 注：完整代码包含二分法、弦截法实现及收敛性测试，可联系作者获取。\n\n本手册通过生活类比→算法实现→理论证明的递进路径，帮助学习者建立系统认知。建议配合交互式可视化工具（如Desmos/Geogebra）加深理解。",
      "modelId": "model_1748848200623"
    }
  ],
  "edges": [],
  "nodeIdCounter": 2
}